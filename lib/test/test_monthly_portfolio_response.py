# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.monthly_portfolio_response import MonthlyPortfolioResponse

class TestMonthlyPortfolioResponse(unittest.TestCase):
    """MonthlyPortfolioResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonthlyPortfolioResponse:
        """Test MonthlyPortfolioResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonthlyPortfolioResponse`
        """
        model = MonthlyPortfolioResponse()
        if include_optional:
            return MonthlyPortfolioResponse(
                page = 1.337,
                total = 1.337,
                total_pages = 1.337,
                results = [
                    pluggy_sdk.models.monthly_portfolio.MonthlyPortfolio(
                        balance = 1.337, 
                        yield_percentage = 1.337, 
                        yield_amount = 1.337, 
                        date = '', 
                        yield_percentage_over_index = pluggy_sdk.models.percentage_over_index.percentageOverIndex(
                            value = 1.337, 
                            index = '', ), )
                    ]
            )
        else:
            return MonthlyPortfolioResponse(
        )
        """

    def testMonthlyPortfolioResponse(self):
        """Test MonthlyPortfolioResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
