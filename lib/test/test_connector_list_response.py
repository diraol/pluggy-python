# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.connector_list_response import ConnectorListResponse

class TestConnectorListResponse(unittest.TestCase):
    """ConnectorListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectorListResponse:
        """Test ConnectorListResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectorListResponse`
        """
        model = ConnectorListResponse()
        if include_optional:
            return ConnectorListResponse(
                page = 1.337,
                total = 1.337,
                total_pages = 1.337,
                results = [
                    {"id":201,"name":"Itaú","primaryColor":"EC7000","institutionUrl":"https://www.itau.com.br","country":"BR","type":"PERSONAL_BANK","credentials":[{"label":"Agência","name":"agency","type":"number","placeholder":"Agência","validation":"^\\d{4}$","validationMessage":"O agencia deve ter 4 dígito"},{"label":"Conta","name":"account","type":"number","placeholder":"Conta","validation":"^\\d{4,6}$","validationMessage":"O conta deve ter 6 dígito"},{"label":"Senha","name":"password","type":"number","placeholder":"Senha","validation":"^\\d{6}$","validationMessage":"O senha deve ter 6 dígito"}],"imageUrl":"https://res.cloudinary.com/dkr0vihmp/image/upload/v1588853552/connectors-logos/itau_ntodvn.png","hasMFA":false,"products":["ACCOUNTS","TRANSACTIONS","CREDIT_CARDS","INVESTMENTS","IDENTITY","PAYMENT_DATA"],"oauthUrl":"https://example-oauth-url.com"}
                    ]
            )
        else:
            return ConnectorListResponse(
        )
        """

    def testConnectorListResponse(self):
        """Test ConnectorListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
