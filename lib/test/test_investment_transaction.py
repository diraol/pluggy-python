# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.investment_transaction import InvestmentTransaction

class TestInvestmentTransaction(unittest.TestCase):
    """InvestmentTransaction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvestmentTransaction:
        """Test InvestmentTransaction
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvestmentTransaction`
        """
        model = InvestmentTransaction()
        if include_optional:
            return InvestmentTransaction(
                type = 'BUY',
                movement_type = 'CREDIT',
                quantity = 1.337,
                value = 1.337,
                amount = 1.337,
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                trade_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expenses = pluggy_sdk.models.investment_expenses.InvestmentExpenses(
                    service_tax = 1.337, 
                    brokerage_fee = 1.337, 
                    income_tax = 1.337, 
                    trading_assets_notice_fee = 1.337, 
                    maintenance_fee = 1.337, 
                    settlement_fee = 1.337, 
                    clearing_fee = 1.337, 
                    stock_exchange_fee = 1.337, 
                    custody_fee = 1.337, 
                    operating_fee = 1.337, 
                    other = 1.337, )
            )
        else:
            return InvestmentTransaction(
                type = 'BUY',
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testInvestmentTransaction(self):
        """Test InvestmentTransaction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
