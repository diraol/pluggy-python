# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.page_response_acquirer_anticipations import PageResponseAcquirerAnticipations

class TestPageResponseAcquirerAnticipations(unittest.TestCase):
    """PageResponseAcquirerAnticipations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageResponseAcquirerAnticipations:
        """Test PageResponseAcquirerAnticipations
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageResponseAcquirerAnticipations`
        """
        model = PageResponseAcquirerAnticipations()
        if include_optional:
            return PageResponseAcquirerAnticipations(
                results = [
                    {"id":"71996b6d-8991-450c-8542-ae59069d1a9d","itemId":"9aab8d24-c89b-4b0e-8974-7dd5614686e4","description":"","currencyCode":"BRL","grossAmount":313.28,"date":"2023-02-06T03:00:00.000Z","status":"APPROVED","netAmount":308.66,"fee":1.82,"feeAmount":4.62}
                    ],
                page = 1.337,
                total = 1.337,
                total_pages = 1.337
            )
        else:
            return PageResponseAcquirerAnticipations(
                results = [
                    {"id":"71996b6d-8991-450c-8542-ae59069d1a9d","itemId":"9aab8d24-c89b-4b0e-8974-7dd5614686e4","description":"","currencyCode":"BRL","grossAmount":313.28,"date":"2023-02-06T03:00:00.000Z","status":"APPROVED","netAmount":308.66,"fee":1.82,"feeAmount":4.62}
                    ],
                page = 1.337,
                total = 1.337,
                total_pages = 1.337,
        )
        """

    def testPageResponseAcquirerAnticipations(self):
        """Test PageResponseAcquirerAnticipations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
