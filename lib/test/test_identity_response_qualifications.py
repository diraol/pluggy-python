# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.identity_response_qualifications import IdentityResponseQualifications

class TestIdentityResponseQualifications(unittest.TestCase):
    """IdentityResponseQualifications unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IdentityResponseQualifications:
        """Test IdentityResponseQualifications
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IdentityResponseQualifications`
        """
        model = IdentityResponseQualifications()
        if include_optional:
            return IdentityResponseQualifications(
                company_cnpj = '',
                occupation_code = 'RECEITA_FEDERAL',
                informed_income = pluggy_sdk.models.identity_response_qualifications_informed_income.IdentityResponse_qualifications_informedIncome(
                    frequency = 'DIARIA', 
                    amount = 1.337, 
                    date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                informed_patrimony = pluggy_sdk.models.identity_response_qualifications_informed_patrimony.IdentityResponse_qualifications_informedPatrimony(
                    amount = 1.337, 
                    year = 1.337, )
            )
        else:
            return IdentityResponseQualifications(
                company_cnpj = '',
        )
        """

    def testIdentityResponseQualifications(self):
        """Test IdentityResponseQualifications"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
