# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.payment_intent import PaymentIntent

class TestPaymentIntent(unittest.TestCase):
    """PaymentIntent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentIntent:
        """Test PaymentIntent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentIntent`
        """
        model = PaymentIntent()
        if include_optional:
            return PaymentIntent(
                id = '',
                status = 'PAYMENT_REJECTED',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                payment_request = {},
                bulk_payment = {"id":"4cfe1f6d-ae71-4c35-aae0-8f8a535ffbbd","totalAmount":100.5,"status":"CREATED","createdAt":"2023-11-06T15:38:47.861Z","updatedAt":"2023-11-06T15:45:19.384Z","callbackUrls":{"success":"https://success.com","pending":"https://pending.com","error":"https://error.com"},"paymentUrl":"https://pay.pluggy.ai/bulk/05c693bf-c196-47ea-a28c-8251d6bb8a06","paymentRequests":[{"id":"c2a6b7d9-3349-435d-8341-44021449ebbc","amount":100.5,"description":"Transferência","status":"IN_PROGRESS","createdAt":"2023-11-06T13:03:45.689Z","updatedAt":"2023-11-06T15:45:19.401Z","callbackUrls":null,"recipient":null,"paymentUrl":"https://pay.pluggy.ai/05c693bf-c196-47ea-a28c-8251d6bb8a06"}],"smartAccount":{"id":"71996b6d-8991-450c-8542-ae59069d1a9d","ispb":"0001020","agency":"1234","number":"123456","verifyingDigit":"7","type":"CHECKING_ACCOUNT","isSandbox":false}},
                connector = {"id":201,"name":"Itaú","primaryColor":"EC7000","institutionUrl":"https://www.itau.com.br","country":"BR","type":"PERSONAL_BANK","credentials":[{"label":"Agência","name":"agency","type":"number","placeholder":"Agência","validation":"^\\d{4}$","validationMessage":"O agencia deve ter 4 dígito"},{"label":"Conta","name":"account","type":"number","placeholder":"Conta","validation":"^\\d{4,6}$","validationMessage":"O conta deve ter 6 dígito"},{"label":"Senha","name":"password","type":"number","placeholder":"Senha","validation":"^\\d{6}$","validationMessage":"O senha deve ter 6 dígito"}],"imageUrl":"https://res.cloudinary.com/dkr0vihmp/image/upload/v1588853552/connectors-logos/itau_ntodvn.png","hasMFA":false,"products":["ACCOUNTS","TRANSACTIONS","CREDIT_CARDS","INVESTMENTS","IDENTITY","PAYMENT_DATA"],"oauthUrl":"https://example-oauth-url.com"},
                consent_url = '',
                reference_id = '',
                payment_method = 'PIS',
                pix_data = pluggy_sdk.models.pix_data.PixData(
                    value = '', 
                    qr = '', )
            )
        else:
            return PaymentIntent(
        )
        """

    def testPaymentIntent(self):
        """Test PaymentIntent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
