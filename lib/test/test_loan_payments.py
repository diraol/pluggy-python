# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.loan_payments import LoanPayments

class TestLoanPayments(unittest.TestCase):
    """LoanPayments unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LoanPayments:
        """Test LoanPayments
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LoanPayments`
        """
        model = LoanPayments()
        if include_optional:
            return LoanPayments(
                contract_outstanding_balance = 1.337,
                releases = [
                    openapi_client.models.loan_payment_release.LoanPaymentRelease(
                        is_over_parcel_payment = True, 
                        installment_id = '', 
                        paid_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        currency_code = 'BRL', 
                        paid_amount = 1.337, 
                        over_parcel = openapi_client.models.loan_payment_release_over_parcel.LoanPaymentReleaseOverParcel(
                            fees = [
                                openapi_client.models.loan_payment_release_over_parcel_fee.LoanPaymentReleaseOverParcelFee(
                                    name = '', 
                                    code = '', 
                                    amount = 1.337, )
                                ], 
                            charges = [
                                openapi_client.models.loan_payment_release_over_parcel_charge.LoanPaymentReleaseOverParcelCharge(
                                    type = '', 
                                    additional_info = '', 
                                    amount = 1.337, )
                                ], ), )
                    ]
            )
        else:
            return LoanPayments(
        )
        """

    def testLoanPayments(self):
        """Test LoanPayments"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
