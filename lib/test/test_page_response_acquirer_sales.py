# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.page_response_acquirer_sales import PageResponseAcquirerSales

class TestPageResponseAcquirerSales(unittest.TestCase):
    """PageResponseAcquirerSales unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageResponseAcquirerSales:
        """Test PageResponseAcquirerSales
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageResponseAcquirerSales`
        """
        model = PageResponseAcquirerSales()
        if include_optional:
            return PageResponseAcquirerSales(
                results = [
                    {"id":"71996b6d-8991-450c-8542-ae59069d1a9d","itemId":"9aab8d24-c89b-4b0e-8974-7dd5614686e4","description":"","currencyCode":"BRL","date":"2023-10-02T03:00:00.000Z","grossAmount":34,"installmentCount":2,"paymentMethod":"CARD","authorizationCode":"123456","cardFlag":"Visa","cardNumber":"123456******1234","cardFundingSource":"CREDIT","nsu":"12345678912345","status":"APPROVED","netAmount":30.6,"mdrFee":10,"mdrFeeAmount":3.4,"installments":[{"number":1,"netAmount":15.3,"grossAmount":17,"receiptDate":"2023-08-28T00:00:00"},{"number":2,"netAmount":15.3,"grossAmount":17,"receiptDate":"2023-07-28T00:00:00"}],"terminalId":"1234561234561234"}
                    ],
                page = 1.337,
                total = 1.337,
                total_pages = 1.337
            )
        else:
            return PageResponseAcquirerSales(
                results = [
                    {"id":"71996b6d-8991-450c-8542-ae59069d1a9d","itemId":"9aab8d24-c89b-4b0e-8974-7dd5614686e4","description":"","currencyCode":"BRL","date":"2023-10-02T03:00:00.000Z","grossAmount":34,"installmentCount":2,"paymentMethod":"CARD","authorizationCode":"123456","cardFlag":"Visa","cardNumber":"123456******1234","cardFundingSource":"CREDIT","nsu":"12345678912345","status":"APPROVED","netAmount":30.6,"mdrFee":10,"mdrFeeAmount":3.4,"installments":[{"number":1,"netAmount":15.3,"grossAmount":17,"receiptDate":"2023-08-28T00:00:00"},{"number":2,"netAmount":15.3,"grossAmount":17,"receiptDate":"2023-07-28T00:00:00"}],"terminalId":"1234561234561234"}
                    ],
                page = 1.337,
                total = 1.337,
                total_pages = 1.337,
        )
        """

    def testPageResponseAcquirerSales(self):
        """Test PageResponseAcquirerSales"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
