# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.identity_response_financial_relationships import IdentityResponseFinancialRelationships

class TestIdentityResponseFinancialRelationships(unittest.TestCase):
    """IdentityResponseFinancialRelationships unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IdentityResponseFinancialRelationships:
        """Test IdentityResponseFinancialRelationships
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IdentityResponseFinancialRelationships`
        """
        model = IdentityResponseFinancialRelationships()
        if include_optional:
            return IdentityResponseFinancialRelationships(
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                products_services_type = [
                    ''
                    ],
                procurators = [
                    pluggy_sdk.models.identity_response_financial_relationships_procurators_inner.IdentityResponse_financialRelationships_procurators_inner(
                        type = 'REPRESENTANTE_LEGAL', 
                        cpf_number = '', 
                        civil_name = '', 
                        social_name = '', )
                    ],
                accounts = [
                    pluggy_sdk.models.identity_response_financial_relationships_accounts_inner.IdentityResponse_financialRelationships_accounts_inner(
                        compe_code = '', 
                        branch_code = '', 
                        number = '', 
                        check_digit = '', 
                        type = '', 
                        subtype = '', )
                    ]
            )
        else:
            return IdentityResponseFinancialRelationships(
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                products_services_type = [
                    ''
                    ],
                procurators = [
                    pluggy_sdk.models.identity_response_financial_relationships_procurators_inner.IdentityResponse_financialRelationships_procurators_inner(
                        type = 'REPRESENTANTE_LEGAL', 
                        cpf_number = '', 
                        civil_name = '', 
                        social_name = '', )
                    ],
        )
        """

    def testIdentityResponseFinancialRelationships(self):
        """Test IdentityResponseFinancialRelationships"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
