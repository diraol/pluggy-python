# coding: utf-8

"""
    Pluggy API

    Pluggy's main API to review data and execute connectors

    The version of the OpenAPI document: 1.0.0
    Contact: hello@pluggy.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pluggy_sdk.models.investments_list200_response import InvestmentsList200Response

class TestInvestmentsList200Response(unittest.TestCase):
    """InvestmentsList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvestmentsList200Response:
        """Test InvestmentsList200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvestmentsList200Response`
        """
        model = InvestmentsList200Response()
        if include_optional:
            return InvestmentsList200Response(
                page = 1.337,
                total = 1.337,
                total_pages = 1.337,
                results = [
                    {"id":"f77eccf4-7714-498e-92a9-1bebe70335d9","code":"12.345.678/0001-00","name":"Bahia AM Advisory FIC de FIM","balance":1359.39,"currencyCode":"BRL","type":"MUTUAL_FUND","subtype":"MULTIMARKET_FUND","lastMonthRate":0.24,"annualRate":3.24,"lastTwelveMonthsRate":3,"itemId":"207f5bcd-312a-439c-abbe-166b6632c980","value":500,"quantity":3,"amount":1500,"taxes":40.61,"taxes2":100,"date":"2020-07-19T18:27:41.802Z","owner":"John Doe","number":null,"amountProfit":310.5,"amountWithdrawal":1310.5,"amountOriginal":1000,"status":"ACTIVE","transactions":[{"tradeDate":"2020-10-01T00:00:00.000Z","date":"2020-10-01T00:00:00.000Z","description":"Aplicação Fondo de Investimento Premium","quantity":1.25,"value":2,"amount":5,"type":"BUY","movementType":"CREDIT"}]}
                    ]
            )
        else:
            return InvestmentsList200Response(
        )
        """

    def testInvestmentsList200Response(self):
        """Test InvestmentsList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
